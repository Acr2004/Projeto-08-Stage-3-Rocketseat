* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    font-size: 62.5%;

    --title-primary: #202024;
    --text-primary: #121214;
    --brand-primary: #065E7C;
}

html {
    color: var(--text-primary);
}

html, body, input {
    font-family: 'Mulish', sans-serif;
}

body {
    font-size: 1.6rem;
}

.page {
    height: 100vh;
    display: grid;
    grid-template-rows: 7.2rem 1fr 6.4rem;
    grid-template-areas:
    "A A A"
    "B B B"
    "D D D";
}

.container {
    width: min(122rem, 100%);
    margin: 0 auto;
}

header .container {
    display: flex;
    gap: 2.6rem;
}

header {
    grid-area: A;
}

main {
    grid-area: B;
    display: flex;
    flex-direction: column;
    gap: 3.2rem;
}

main section {
    grid-area: E;
}

main aside {
    grid-area: F;
}

footer {
    grid-area: D;
}

h1, h2 {
    font-weight: 700;
    font-size: 2.4rem;
    color: var(--title-primary);
}

h3 {
    font-size: 1.8rem;
}

header {
    background-color: var(--brand-primary);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 2.8rem;
}

header a {
    line-height: 0;
    width: 4.0rem;
    height: 4.0rem;
    background-color: #FFF;
    border-radius: 50%;
}

header form {
    width: 100%;
}

header form label {
    width: 1px;
    height: 1px;
    overflow: hidden;
    position: absolute;
}

header form input {
    background-color: rgb(255, 255, 255, 0.2);
    border: none;
    padding: 1.2rem 1.4rem;
    border-radius: 0.4rem;
    font-weight: 600;
    font-family: 'Mulish', sans-serif;
    width: 100%;
    outline: none;
    color: #FFF;
}

header form input::placeholder {
    color: #FFF;
}

header img:last-child {
    width: 4rem;
    height: 4rem;
    cursor: pointer;
}

main section {
    display: flex;
    flex-direction: column;
    gap: 3.2rem;
}

#hero {
    width: 100%;
}

.title {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
    padding: 0 2.2rem;
}

.title h1 {
    line-height: 160%;
}

#feedback {
    display: flex;
    gap: 1.2rem;
}

#feedback img {
    cursor: pointer;
    transition: all 300ms;
}

#feedback img:hover {
    transform: scale(1.1);
    transition: all 300ms;
}

main section p {
    font-size: 1.6rem;
    font-weight: 400;
    line-height: 160%;
    padding: 0 2.2rem;
}

main aside {
    padding: 0 2.2rem;
    display: flex;
    flex-direction: column;
    gap: 3.2rem;
    margin-bottom: 3.6rem;
}

main aside h2 {
    line-height: 160%;
}

.item {
    display: flex;
    gap: 1.6rem;
}

.item img {
    transition: all 300ms;
}

.item img:hover {
    transform: scale(1.05);
    transition: all 300ms;
}

.details h3 {
    font-weight: 700;
    line-height: 160%;
}

.details p {
    font-size: 1.4rem;
    font-weight: 400;
    line-height: 160%;
}

footer {
    background-color: var(--brand-primary);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.6rem;
    font-weight: 600;
    color: #FFF;
}

footer .container {
    display: flex;
    justify-content: center;
}

@media (min-width: 1226px) {
    main {
        display: grid;
        grid-template-areas:
        "E E F";
        padding: 4.4rem;
    }

    .title {
        flex-direction: row;
        justify-content: space-between;
        padding: 0;
    }

    main section p {
        padding: 0;
    }
    
    main aside {
        padding: 0;
        margin-bottom: 0;
    }
}

@keyframes fromTop {
    from {
        opacity: 0;
        transform: translateY(-100%);
    }
}

header {
    animation: fromTop 600ms 200ms backwards;
}

@keyframes fromBottom {
    from {
        opacity: 0;
        transform: translateY(100%);
    }
}

footer {
    animation: fromBottom 600ms 200ms backwards;
}

@keyframes fromLeft {
    from {
        opacity: 0;
        transform: translateX(-100%);
    }
}

section {
    animation: fromLeft 1000ms 200ms backwards;
}

@keyframes fromRight {
    from {
        opacity: 0;
        transform: translateX(100%);
    }
}

aside {
    animation: fromRight 1000ms 200ms backwards;
}